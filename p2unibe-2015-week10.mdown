# P2 Course 2015, Week 10 #

10th Week, please push your solution by Thursday, May 21, 13:00 o'clock (at noon) to our server.

## Problemset 10, Tertis Battleships - Design Patterns

Your boss recently got his hands on a book regarding Design Patterns and is now convinced that every problem in programming there is and ever will be can be solved by picking the right pattern.
Thus, he wants you to add patterns to the Tertis Battleships game.

### Finding design patterns

To warm up describe the sample solution for Tetris Battleships (it's in the folder problemset06-sample) in terms of patterns:

	- Identify at least 5 different design patters in the code.
	- For each pattern:
		- provide a short general description of the pattern
		- explain in a paragraph how the pattern is used in the Tetris Battleship implementation (you can use UML diagrams to do this)
		- explain in a paragraph why you think the pattern was used there (what are the advantages/the disadvantages of using the pattern)
		- each of the previous information must be clearly identifiable in your solution
	- Put all the descriptions in a file called 'patterns.mdown', in proper markdown syntax

**Note**
Patterns from the Java Standard Library do not count. For example, if the toString method from a class is implemented using StringBuilder this is not of interest in this homework. Only patterns actually implemented by the provided code will be taken into account.
	
**Note**
When you search for patterns their actual implementation might be different then the one from the book. This is ok, as when you use a pattern you adapt it to your situation. "If it looks like a duck, swims like a duck, and quacks like a duck, then it probably is a duck". Use the same idea for finding patents.

**Note:** You have access to the Gang of Four book [here](http://scgresources.unibe.ch/~scg/Literature/Books/GOF/contfso.htm), which defined the pattern vocabulary. However as time moves on, there were more commonly used pattern discovered. Wikipedia has an extensive list [here][wiki_design_pattern].

[wiki_design_pattern]: https://en.wikipedia.org/wiki/Design_pattern_(computer_science)

### Using design patterns

In your implementation of the Tetris Battleships game add at least two of the following patterns:

	- Composite
	- Visitor
	- Chain of Responsability
	- Template Method
    - State
    - Mediator
    - Strategy
    - Observer

For each pattern that you incorporate into your solution make a class UML diagram showing how you added that pattern to your implementation.
Add only the patterns that make sense.

**Note**: For this assignment the diagram must be hand made.



