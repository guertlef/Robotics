<!DOCTYPE aesl-source>
<network>


<!--list of global events-->
<event size="1" name="search"/>
<event size="1" name="release"/>
<event size="0" name="foundDoor"/>
<event size="0" name="foundKey"/>


<!--list of constants-->
<constant value="0" name="WAIT"/>
<constant value="1" name="RB"/>
<constant value="2" name="R"/>
<constant value="3" name="B"/>
<constant value="4" name="PASS"/>
<constant value="10" name="TRUE"/>
<constant value="20" name="FALSE"/>


<!--show keywords state-->
<keywords flag="true"/>


<!--node e-puck 1-->
<node nodeId="1" name="e-puck 1">var doorFound = FALSE
var keyFound = FALSE
var state = RB

sub searchRB
	# search for door and key
	# before emitting event found(Door/Key)
	# check if door and key were already found.
	
	while doorFound == TRUE and keyFound == TRUE do
		state = WAIT	
	end
	
	# if item found is door 
	emit foundDoor
	
	# if item found is key 
	emit foundKey

sub searchB
	# find door 
	while doorFound == TRUE and keyFound == TRUE do
		state = WAIT	
	end
	
	emit foundDoor
	
sub wait
	speed.left = 0
	speed.right = 0

onevent search
	if args[0]== RB then
		callsub searchRB
	elseif args[0] == R then
		callsub searchB	
	end
	
onevent foundDoor
	if keyFound == TRUE then
		state = PASS
	else emit search R
	end
	
onevent foundKey
	state = WAIT
	if doorFound != TRUE then
		emit search B	
	end
	
onevent release
	if args[0] == RB then
		emit search RB
		state = RB
	end
	

</node>


<!--node e-puck 2-->
<node nodeId="2" name="e-puck 2"></node>


<!--node e-puck 3-->
<node nodeId="3" name="e-puck 3"></node>


</network>
