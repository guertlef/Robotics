<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->
<constant value="0" name="NO_COLOR"/>
<constant value="1" name="RED"/>
<constant value="2" name="GREEN"/>
<constant value="3" name="BLUE"/>
<constant value="800" name="P_THRESH"/>
<constant value="400" name="S_INIT"/>


<!--show keywords state-->
<keywords flag="true"/>


<!--node e-puck3-->
<node nodeId="4" name="e-puck3">
var camRed = 0
var camBlue = 0
var camGreen = 0
var i


var color = NO_COLOR

var proxRight
var proxLeft
var ds   # delta speed
var r
var b
var g

r=5
b=0
g=0#2

onevent camera
	# calculation of average colors, only uses pixels 28-32
	for i in 0:5 do
		camRed += cam.red[i+28]	
	end
	camRed /= 6

	for i in 0:5 do
		camBlue += cam.blue[i+28]	
	end
	camBlue /= 6
	
	for i in 0:5 do
		camGreen += cam.green[i+28]	
	end
	camGreen /= 6
			
	if 2*(camBlue -r) &lt;= camRed and #camRed &lt;= 4*camBlue and
	   2*(camGreen -r) &lt;= camRed #and camRed &lt;= 3*camGreen 
	   then
		color = RED
		
	elseif camRed -g &lt;= camGreen and 7*camBlue &lt;= 6*(camGreen +g) and
		   4*(camGreen +g) &lt;= 9*camBlue then
			color = GREEN
		
	elseif 7*camRed &lt;= 6*(camBlue +b) and 4*(camBlue -b) &lt;= 9*camRed 
		   and camGreen -b &lt;= camBlue then
			color = BLUE
		
	else
		color = NO_COLOR
	end
	
onevent ir_sensors
	# visual feedback
	if color == NO_COLOR then
		leds[4] = 0
		leds[2] = 0
		leds[6] = 0
	
	elseif color == RED then
		leds[4] = 1
		leds[2] = 0
		leds[6] = 0
	
	elseif color == BLUE then
		leds[4] = 0
		leds[2] = 1
		leds[6] = 1
		
	elseif color == GREEN then
		leds[4] = 1
		leds[2] = 1
		leds[6] = 1
	end</node>


</network>
